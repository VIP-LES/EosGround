FROM python:3.10-slim

# Install necessary dependencies including PostgreSQL development libraries
RUN apt-get update && apt-get install -y \
    git \
    python3.10 \
    python3-pip \
    python3-dev \
    python3-venv \
    build-essential \
    libpq-dev  # PostgreSQL development libraries required for psycopg2

# Install netcat for database checking
RUN apt-get update && apt-get install -y netcat-openbsd

# Set Python 3.10 as the default
# RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1

# Create and activate a virtual environment
RUN python3 -m venv /env
ENV PATH="/env/bin:$PATH"

# Upgrade pip inside the virtual environment
RUN pip install --upgrade pip

# Clone the repository
# RUN git clone https://github.com/VIP-LES/EosGround.git /EosGround


COPY . /EosGround

# RUN python3 -m EosGround.database.db_setup
# RUN python3 -m EosGround.database.pipeline

# Set working directory
WORKDIR /EosGround

# Install dependencies from requirements.txt inside the virtual environment
RUN pip install -r requirements.txt



# TODO: FIRST ADD THE SQL FILE INTO pgAdmin then run the following commands:
# RUN python3 manage.py makemigrations
#RUN python3 manage.py migrate
# # RUN python3 manage.py migrate

# Copy and set permissions for entrypoint script
# COPY docker-entrypoint-pipeline.sh /docker-entrypoint-pipeline.sh
# RUN chmod +x /docker-entrypoint-pipeline.sh

# # Change the CMD to use the entrypoint script
# CMD ["/docker-entrypoint-pipeline.sh"]


ENV PYTHONPATH=/EosGround

# Add logging configuration
ENV PYTHONUNBUFFERED=1

# print message to console
RUN echo "Pipeline is ready to run"

# Change CMD to run with python -u for unbuffered output
CMD ["python3", "-u", "EosGround/database/pipeline"]
